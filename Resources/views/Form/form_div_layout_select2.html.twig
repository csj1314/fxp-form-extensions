{% block select2_widget_content -%}
    {%- set select2 = select2|merge({'wrapper_attr': select2.wrapper_attr|merge({'class': ('select2-wrapper ' ~ select2.wrapper_attr.class|default(''))|trim})}) -%}
    <div{% for attrname, attrvalue in select2.wrapper_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {% if select2.ajax.enabled or select2.tags is defined %}
        <input type="hidden" id="{{ id }}_values" />
        {% endif %}
        {{- block('base_choice_widget') -}}
    </div>

    {{- block('select2_widget_content_wrapper_js')  -}}
{%- endblock select2_widget_content %}

{% block select2_widget_content_wrapper_js -%}
    <script>
        {{- block('select2_widget_content_js')  -}}
    </script>
{% endblock select2_widget_content_wrapper_js -%}

{% block select2_widget_content_js -%}
    {% if select2.ajax.enabled or select2.tags is defined %}
        var {{ id }}Init = function ($el, $val) {
            if ($val.val() != '') {
                var opts = JSON.parse($val.val());
                var values = [];
                for (var i = 0; i < opts.length; i++) {
                    values.push(opts[i].v);
                    if ($el.find('option[value="'+opts[i].v+'"]').length  == 0) {
                        var $opt = $('<option value="'+opts[i].v+'" selected="selected">'+opts[i].l+'</option>');
                        if (opts[i].t) {
                            $opt.attr('data-select2-tag', true);
                        }
                        $el.append($opt);
                    }
                }
                $el.val(values);
            }
        };
        {{ id }}Init($( '#{{ id }}' ), $( '#{{ id }}'+'_values' ));
    {% endif %}
    $( '#{{ id }}' ).select2({
        {%- if select2.template_result is defined -%}
            'templateResult': {{ select2.template_result|raw -}},
        {%- endif -%}
        {%- if select2.template_selection is defined -%}
            'templateSelection': {{ select2.template_selection|raw -}},
        {%- endif -%}
        {%- if select2.dropdown_parent is defined -%}
            'dropdownParent': {{ select2.dropdown_parent|raw -}},
        {%- endif -%}
        {%- if select2.selection_adapter is defined -%}
            'selectionAdapter': {{ select2.selection_adapter|raw -}},
        {%- endif -%}
        {%- if select2.data_adapter is defined -%}
            'dataAdapter': {{ select2.data_adapter|raw -}},
        {%- endif -%}
        {%- if select2.dropdown_adapter is defined -%}
            'dropdownAdapter': {{ select2.dropdown_adapter|raw -}},
        {%- endif -%}
        {%- if select2.results_adapter is defined -%}
            'resultsAdapter': {{ select2.results_adapter|raw -}},
        {%- endif -%}
        {%- if select2.matcher is defined -%}
            'matcher': {{ select2.matcher|raw -}},
        {%- endif -%}
        {%- if select2.create_tag is defined -%}
            'createTag': {{ select2.create_tag|raw -}},
        {%- endif -%}
        {%- if select2.close_on_select is defined -%}
            'closeOnSelect': '{{- select2.close_on_select|e -}}',
        {%- endif -%}
        {%- if select2.min_results_for_search is defined -%}
            'minimumResultsForSearch': {{ select2.min_results_for_search -}},
        {%- endif -%}
        {%- if select2.min_input_length is defined -%}
            'minimumInputLength': {{ select2.min_input_length -}},
        {%- endif -%}
        {%- if select2.max_input_length is defined -%}
            'maximumInputLength': {{ select2.max_input_length -}},
        {%- endif -%}
        {%- if select2.max_selection_length is defined -%}
            'maximumSelectionLength': {{ select2.max_selection_length -}},
        {%- endif -%}
        {%- if select2.tags is defined -%}
            'tags': {{ select2.tags|raw -}},
        {%- endif -%}
        {%- if select2.token_separators is defined -%}
            'tokenSeparators': {{ select2.token_separators|json_encode|raw -}},
        {%- endif -%}
        {%- if select2.placeholder is defined -%}
            'placeholder': '{{- select2.placeholder|e -}}',
        {%- elseif select2.allow_clear is defined -%}
            'placeholder': {
                id: "",
                placeholder: ""
            },
        {%- endif -%}
        {%- if select2.width is defined -%}
            'width': '{{- select2.width|e -}}',
        {%- endif -%}
        {%- if select2.data is defined -%}
            'data': {{ select2.data|json_encode|raw -}},
        {%- endif -%}
        {%- if select2.allow_clear is defined -%}
            'allowClear': {{ select2.allow_clear|e -}},
        {%- endif -%}
        {%- if select2.dir is defined -%}
            'dir': '{{- select2.dir|e -}}',
        {%- endif -%}
        {%- if select2.theme is defined -%}
            'theme': '{{- select2.theme|e -}}',
        {%- endif -%}
        {%- if select2.ajax.enabled -%}
            'ajax': {
                {%- if select2.ajax.data_type is defined -%}
                    'dataType': '{{- select2.ajax.data_type|e -}}',
                {%- endif -%}
                {%- if select2.ajax.delay is defined -%}
                    'delay': {{ select2.ajax.delay|e -}},
                {%- endif -%}
                {%- if select2.ajax.cache is defined -%}
                    'cache': {{ select2.ajax.cache|e -}},
                {%- endif -%}
                {%- if select2.ajax.data is defined -%}
                    'data': {{ select2.ajax.data|raw -}},
                {%- else -%}
                    data: function (params) {
                        var value = $( '#{{ id }}' ).val();
                        var data = {};
                        {% set prefix = '' %}
                        {% if select2.ajax.ajax_id is defined and select2.ajax.ajax_id is not empty %}
                            {% set prefix = select2.ajax.ajax_id ~ '_' %}
                            data.ajax_id = "{{ select2.ajax.ajax_id }}";
                        {% endif %}
                        data['{{ prefix }}s'] = params.term;
                        data['{{ prefix }}pn'] = params.page;
                        data['{{ prefix }}ps'] = {{ select2.ajax.page_size }};
                        data['{{ prefix }}ids'] = $.isArray(value) ? value.join() : value;

                        return data;
                    },
                {%- endif -%}
                {%- if select2.ajax.process_results is defined -%}
                    'processResults': {{ select2.ajax.process_results|raw -}},
                {%- else -%}
                    processResults: function (data, params) {
                        params.page = params.page || 1;

                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * data.pageSize) < data.size
                            }
                        };
                    },
                {%- endif -%}
                {%- if select2.ajax.transport is defined -%}
                    'transport': {{ select2.ajax.transport|raw -}},
                {%- else -%}
                    'transport': function (options, success) {
                        var $request = $.ajax(options);
                        $request.then(success);
                        $request.fail(function () {
                            $('#{{ id }}').data('select2').trigger('results:message', {
                              message: 'errorLoading'
                            });
                        });
                        return $request;
                    },
                {%- endif -%}
                'url': '{{- select2.ajax.url|e -}}'
            },
        {%- endif -%}
        'language': '{{- select2.language|e -}}'
    });
    {% if select2.ajax.enabled or select2.tags is defined %}
    $( '#{{ id }}' ).on('change.fxp_select2', function () {
        var opts = [];
        $('option:selected', this).each(function (index, el) {
            var $el = $(el);
            opts.push({v: $el.prop('value'), l: $el.text(), t: undefined != $el.attr('data-select2-tag')});
        });
        $( '#{{ id }}'+'_values' ).val(JSON.stringify(opts));
    });
    {% endif %}
{%- endblock select2_widget_content_js %}
